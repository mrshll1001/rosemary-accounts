<?php

namespace AppBundle\Repository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{

  /**
   * Finds all reconciled posts by user
   */
  public function findAllReconciled($user)
  {
    return $this->getEntityManager()
          ->createQuery(
            'SELECT p FROM AppBundle:Post p WHERE p.reconciled = true AND p.user = '.$user->getId()
          )
          ->getResult();
  }

  /**
   * Finds all unreconciled posts by user (usually to reconcile them)
   */
  public function findAllNotReconciled($user)
  {
    return $this->getEntityManager()
          ->createQuery(
          'SELECT p FROM AppBundle:Post p WHERE p.reconciled = false AND p.user = '.$user->getId()
          )
          ->getResult();
  }

  /**
   * Finds all events
   */
  public function findAllEvents($user)
  {
    return $this->getEntityManager()
            ->createQuery(
            'SELECT p FROM AppBundle:Post p WHERE p.reconciled = true AND p.locationLatitude IS NOT NULL AND p.user = '.$user->getId()
            )
            ->getResult();
  }

  /**
   * Find all posts with a positive financial value
   */
  public function findAllIncome($user)
  {
    return $this->getEntityManager()
    ->createQuery(
    'SELECT p FROM AppBundle:Post p WHERE p.reconciled = true AND p.financialValue > 0 AND p.user = '.$user->getId()
    )
    ->getResult();
  }

  /**
   * Find all posts with a negative financial value
   */
  public function findAllExpenses($user)
  {
    return $this->getEntityManager()
    ->createQuery(
    'SELECT p FROM AppBundle:Post p WHERE p.reconciled = true AND p.financialValue < 0 AND p.user = '.$user->getId()
    )
    ->getResult();
  }

  /**
   * Find all the posts with media
   */
  public function findAllWithMedia($user)
  {
    return $this->getEntityManager()
    ->createQuery(
    'SELECT p FROm AppBundle:Post p WHERE p.reconciled = true AND p.mediaURI IS NOT NULL AND p.user = '.$user->getId()
    )
    ->getResult();
  }

}
