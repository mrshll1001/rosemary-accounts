<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organisationName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organisationDescription', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isSetup', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'customers', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'tags', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'posts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'appTokens'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organisationName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organisationDescription', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isSetup', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'customers', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'tags', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'posts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'appTokens'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function addCustomer(\AppBundle\Entity\Customer $customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCustomer', [$customer]);

        return parent::addCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCustomer(\AppBundle\Entity\Customer $customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCustomer', [$customer]);

        return parent::removeCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomers', []);

        return parent::getCustomers();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\AppBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tag]);

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\AppBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tag]);

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSetup($isSetup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSetup', [$isSetup]);

        return parent::setIsSetup($isSetup);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSetup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSetup', []);

        return parent::getIsSetup();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganisationName($organisationName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganisationName', [$organisationName]);

        return parent::setOrganisationName($organisationName);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganisationName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganisationName', []);

        return parent::getOrganisationName();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganisationDescription($organisationDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganisationDescription', [$organisationDescription]);

        return parent::setOrganisationDescription($organisationDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganisationDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganisationDescription', []);

        return parent::getOrganisationDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', [$post]);

        return parent::addPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', [$post]);

        return parent::removePost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', []);

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function addAppToken(\AppBundle\Entity\AppToken $appToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAppToken', [$appToken]);

        return parent::addAppToken($appToken);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAppToken(\AppBundle\Entity\AppToken $appToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAppToken', [$appToken]);

        return parent::removeAppToken($appToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppTokens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppTokens', []);

        return parent::getAppTokens();
    }

}
